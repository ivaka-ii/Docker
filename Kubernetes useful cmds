Kubernetes GOOD to know CMDS
========================================

Controller manager cmds
----------------------------------------
kubectl get pods -n kube-system		-- view kube-controller-manager
cat /etc/kubernetes/manifests/kube-controller-manager.yaml		-- view settings of the kube controller manager
cat /etc/systemd/system/kube-controller-manager.service			-- shows controller manager service settings
ps -aux | grep kube-controller-manager							-- shows also additional kubernetes settings

Kube scheduler cmds
----------------------------------------
cat /ect/kubernetes/manifests/kube-scheduler.yml
ps -aux | grep kube-scheduler

Kubelet cmds
----------------------------------------
ps -aux | grep kubelet			-- list kubelet settings

Kube-proxy cmds
----------------------------------------
kubectl get pods -n kube-system			-- shows the kubesystem components
kubectl get daemon -n kube-system		-- shows the running daemon (kube-proxy)


Create PODs
----------------------------------------
kubectl run <pod_name> --image nginx			-- downloads and installs nginx from dockerhub
kubectl get pods						-- shows list of pods
kubectl get pods -o wide				-- shows more detailed list of the pods and the node that are located on

kubectl describe pod newpods-<pod_id>	-- describes the details of the pod 

kubectl delete pod <pod_id>				-- deletes a pod

----------------------------------------
!Create a POD:
	
	1. Create a manifest file 
		kubectl run redis --image=<image_name> --dry-run=client -o yaml > <manifest_file>.yaml
	2. Create a resource from the manifest file:
		kubectl create -f <manifest_file>.yaml
	3. Check the working pod
		kubectl get pods
----------------------------------------

kubectl edit pod <pod_id>				-- edits the pod 

kubectl apply -f redis-definition.yaml


Replication controler & replica set cmds & hints
=========================================
You may transition the pod definition under the Replica set .yml file under teplate content

Add a replicas: section in the re-definition.yml file beneat spec and template section

replica set 	-- apiVersion should be "apps/v1"
	replica set requires ALSO "selector:
								matchLabels:
									type: "
									
Commands to replica set:


kubectl get replicaset								-- shows information on the replicaset
kubectl get rs										-- shows information on the replicaset
kubectl describe replicaset					-- shows information about the replicaset specs\

!After editing someting in the replicaset-definition file, you shuld run:
kubectl create -f [file and path of the file] 		-- creates definition file for replica sets

kubectl edit replicaset <name of replicaset>		-- changes the contents of replicaset contents


kubectl delete replicaset <name of replicaset>			-- deletes the replicaset def. file (taken from the replicaset get cmd)
kubectl delete -f <replicaset file>			-- deletest the file of the replicaset 

kubectl replace -f replicaset-definition.yml		-- replaces replicaset file 
kubectl scale -replicas=6 -f replicaset 			--	changes the scale numbers of replicaset
